"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var _events=require("events"),_events2=_interopRequireDefault(_events),_fs=require("fs"),_fs2=_interopRequireDefault(_fs),_path=require("path"),_path2=_interopRequireDefault(_path);function _interopRequireDefault(a){return a&&a.__esModule?a:{default:a}}var DATA="data",END="end",ERROR="error",LINE="line",OPEN="open",UTF8="utf8";console.warn("This package is deprecated. Use nodejs.org/api/readline.html"),exports.default=class extends _events2.default{constructor(a){var b,c=1<arguments.length&&arguments[1]!==void 0?arguments[1]:{};b=super(),this.filepath=_path2.default.normalize(a),this.encoding=c.encoding||UTF8,this.skipEmptyLines=c.skipEmptyLines||!1,this.streamOptions={encoding:this.encoding},c.start&&(this.streamOptions.start=c.start),c.end&&(this.streamOptions.end=c.end),this.readStream=null,this.lines=[],this.lineFragment="",this.paused=!1,this.end=!1,this.ended=!1,setImmediate(function(){b.initStream()})}initStream(){var a=this;this.readStream=_fs2.default.createReadStream(this.filepath,this.streamOptions),this.readStream.on(ERROR,function(b){a.emit(ERROR,b)}),this.readStream.on(OPEN,function(){a.emit(OPEN)}),this.readStream.on(DATA,function(b){a.readStream.pause(),a.lines=a.lines.concat(b.split(/(?:\n|\r\n|\r)/g)),a.lines[0]=a.lineFragment+a.lines[0],a.lineFragment=a.lines.pop()||"",setImmediate(function(){a.nextLine()})}),this.readStream.on(END,function(){a.end=!0,setImmediate(function(){a.nextLine()})})}nextLine(){var a=this,b=void 0;return this.end&&this.lineFragment?(this.emit(LINE,this.lineFragment),this.lineFragment="",void(this.paused||setImmediate(function(){a.terminate()}))):this.paused?void 0:0===this.lines.length?void(this.end?this.terminate():this.readStream.resume()):void(b=this.lines.shift(),(!this.skipEmptyLines||0<b.length)&&this.emit(LINE,b),!this.paused&&setImmediate(function(){a.nextLine()}))}pause(){this.paused=!0}resume(){var a=this;this.paused=!1,setImmediate(function(){a.nextLine()})}terminate(){this.ended||(this.ended=!0,this.emit(END))}close(){var a=this;this.readStream.destroy(),this.end=!0,setImmediate(function(){a.nextLine()})}};
